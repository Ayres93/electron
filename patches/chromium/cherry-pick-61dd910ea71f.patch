From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Sunny Sachanandani <sunnyps@chromium.org>
Date: Thu, 21 Jul 2022 22:14:14 +0000
Subject: gpu: Cache ExternalImageDXGI per WGPUDevice for correctness

After crrev.com/c/dawn/95860, WGPUDevice destruction will invalidate
ExternalImageDXGI's internal resources so for correctness it will be
required to not reuse ExternalImageDXGI across WGPUDevices. This
happened to work due to using the same D3D12 device (from ANGLE's
default adapter) across all WGPUDevices before.

(cherry picked from commit e2955e51b69833a9b7c05bf35297b9259b94802b)

Bug: dawn:576, chromium:1338470
Change-Id: Ie576c798eff5e967a88585338fb299d63e55f0d1
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3752055
Auto-Submit: Sunny Sachanandani <sunnyps@chromium.org>
Reviewed-by: Austin Eng <enga@chromium.org>
Commit-Queue: Sunny Sachanandani <sunnyps@chromium.org>
Cr-Original-Commit-Position: refs/heads/main@{#1022972}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3781070
Bot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Cr-Commit-Position: refs/branch-heads/5112@{#1103}
Cr-Branched-From: b13d3fe7b3c47a56354ef54b221008afa754412e-refs/heads/main@{#1012729}

diff --git a/gpu/command_buffer/service/shared_image_backing_d3d.cc b/gpu/command_buffer/service/shared_image_backing_d3d.cc
index e858456701a9e051f5e28da8deee353e639048f3..0954fe72b7ab0d9c36e9413978c900191ac4fea4 100644
--- a/gpu/command_buffer/service/shared_image_backing_d3d.cc
+++ b/gpu/command_buffer/service/shared_image_backing_d3d.cc
@@ -396,9 +396,8 @@ SharedImageBackingD3D::~SharedImageBackingD3D() {
   dxgi_shared_handle_state_.reset();
   swap_chain_.Reset();
   d3d11_texture_.Reset();
-
 #if BUILDFLAG(USE_DAWN)
-  external_image_ = nullptr;
+  dawn_external_images_.clear();
 #endif  // BUILDFLAG(USE_DAWN)
 }
 
@@ -634,7 +633,9 @@ SharedImageBackingD3D::ProduceDawn(SharedImageManager* manager,
 #endif
 
   // Persistently open the shared handle by caching it on this backing.
-  if (!external_image_) {
+  auto it = dawn_external_images_.find(device);
+  dawn::native::d3d12::ExternalImageDXGI* external_image_ptr = nullptr;
+  if (it == dawn_external_images_.end()) {
     DCHECK(dxgi_shared_handle_state_);
     const HANDLE shared_handle = dxgi_shared_handle_state_->GetSharedHandle();
     DCHECK(base::win::HandleTraits::IsHandleValid(shared_handle));
@@ -644,17 +645,21 @@ SharedImageBackingD3D::ProduceDawn(SharedImageManager* manager,
     externalImageDesc.cTextureDescriptor = &texture_descriptor;
     externalImageDesc.sharedHandle = shared_handle;
 
-    external_image_ = dawn::native::d3d12::ExternalImageDXGI::Create(
-        device, &externalImageDesc);
-
-    if (!external_image_) {
-      DLOG(ERROR) << "Failed to create external image";
+    std::unique_ptr<dawn::native::d3d12::ExternalImageDXGI> external_image =
+        dawn::native::d3d12::ExternalImageDXGI::Create(device,
+                                                       &externalImageDesc);
+    if (!external_image) {
+      LOG(ERROR) << "Failed to create external image";
       return nullptr;
     }
+    external_image_ptr = external_image.get();
+    dawn_external_images_.emplace(device, std::move(external_image));
+  } else {
+    external_image_ptr = it->second.get();
   }
-
+  DCHECK(external_image_ptr);
   return std::make_unique<SharedImageRepresentationDawnD3D>(
-      manager, this, tracker, device, external_image_.get());
+      manager, this, tracker, device, external_image_ptr);
 #else
   return nullptr;
 #endif  // BUILDFLAG(USE_DAWN)
diff --git a/gpu/command_buffer/service/shared_image_backing_d3d.h b/gpu/command_buffer/service/shared_image_backing_d3d.h
index f15c196ec45aceca98b1c9d6d4a3986a6570eed0..54ba17414f5eef0ddc67dd6be2f4ffab7dba433e 100644
--- a/gpu/command_buffer/service/shared_image_backing_d3d.h
+++ b/gpu/command_buffer/service/shared_image_backing_d3d.h
@@ -196,10 +196,12 @@ class GPU_GLES2_EXPORT SharedImageBackingD3D
   // Set if this backing corresponds to the back buffer of |swap_chain_|.
   const bool is_back_buffer_;
 
-  // If external_image_ exists, it means Dawn produced the D3D12 side of the
+  // If an external image exists, it means Dawn produced the D3D12 side of the
   // D3D11 texture created by ID3D12Device::OpenSharedHandle.
 #if BUILDFLAG(USE_DAWN)
-  std::unique_ptr<dawn::native::d3d12::ExternalImageDXGI> external_image_;
+  base::flat_map<WGPUDevice,
+                 std::unique_ptr<dawn::native::d3d12::ExternalImageDXGI>>
+      dawn_external_images_;
 #endif  // BUILDFLAG(USE_DAWN)
 
   // Staging texture used for copy to/from shared memory GMB.
